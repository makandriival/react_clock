{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","interval","showInfo","console","info","props","time","window","setInterval","this","setState","clearInterval","name","className","React","Component","App","clockName","currentTime","Date","toUTCString","slice","hasClock","getRandomName","value","now","toString","handleClockUpdate","handleHasClockOff","rightClick","preventDefault","handleHasClockOn","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"8MAWaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,MAFd,EAiBEC,SAAW,WAETC,QAAQC,KAAK,EAAKC,MAAMC,OAnB5B,uDAKE,WACE,IAAML,EAAWM,OAAOC,YAAYC,KAAKP,SAAU,KAEnDO,KAAKC,SAAS,CAAET,eARpB,kCAWE,WACMQ,KAAKT,MAAMC,UACbM,OAAOI,cAAcF,KAAKT,MAAMC,YAbtC,oBAsBE,WACE,MAAuBQ,KAAKJ,MAApBO,EAAR,EAAQA,KAAMN,EAAd,EAAcA,KAEd,OACE,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGP,WAlCX,GAA2BQ,IAAMC,WCDpBC,G,MAAb,4MACEhB,MAAe,CACbiB,UAAW,UACXC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAClDC,UAAU,GAJd,EAmBEC,cAAgB,WACd,IAAMC,EAAQL,KAAKM,MAAMC,WAAWL,OAAO,GAE3C,EAAKX,SAAS,CAAEO,UAAU,SAAD,OAAWO,MAtBxC,EAyBEG,kBAAoB,WAClB,IAAMrB,GAAO,IAAIa,MAAOC,cAAcC,OAAO,IAAK,GAElD,EAAKX,SACH,CAAEQ,YAAaZ,KA7BrB,EAiCEsB,kBAAoB,SAACC,GACnBA,EAAWC,iBACX,EAAKpB,SAAS,CAAEY,UAAU,KAnC9B,EAsCES,iBAAmB,WACjB,EAAKrB,SAAS,CAAEY,UAAU,KAvC9B,uDAOE,WACEf,OAAOC,YAAYC,KAAKc,cAAe,MACvChB,OAAOC,YAAYC,KAAKkB,kBAAmB,KAC3CK,SAASC,iBAAiB,cAAexB,KAAKmB,mBAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,oBAX5C,kCAcE,WACExB,OAAOI,cAAcJ,OAAOC,YAAYC,KAAKc,cAAe,OAC5DhB,OAAOI,cAAcJ,OAAOC,YAAYC,KAAKkB,kBAAmB,QAhBpE,oBA0CE,WACE,MAIIlB,KAAKT,MAHPiB,EADF,EACEA,UACAC,EAFF,EAEEA,YACAI,EAHF,EAGEA,SAGF,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCS,GACE,cAAC,EAAD,CAAOV,KAAMK,EAAWX,KAAMY,WArDzC,GAAyBJ,IAAMC,YCP/BmB,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.26c87388.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n  time: string;\n}\n\ninterface State {\n  interval: number | null;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    interval: null,\n  };\n\n  componentDidMount(): void {\n    const interval = window.setInterval(this.showInfo, 1000);\n\n    this.setState({ interval });\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.interval) {\n      window.clearInterval(this.state.interval);\n    }\n  }\n\n  showInfo = () => {\n    // eslint-disable-next-line no-console\n    console.info(this.props.time);\n  };\n\n  render() {\n    const { name, time } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock/Clock';\nimport './App.scss';\n\ninterface State {\n  clockName: string;\n  currentTime: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    clockName: 'Clock-0',\n    currentTime: new Date().toUTCString().slice(-12, -4),\n    hasClock: true,\n  };\n\n  componentDidMount(): void {\n    window.setInterval(this.getRandomName, 3300);\n    window.setInterval(this.handleClockUpdate, 1000);\n    document.addEventListener('contextmenu', this.handleHasClockOff);\n    document.addEventListener('click', this.handleHasClockOn);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(window.setInterval(this.getRandomName, 3300));\n    window.clearInterval(window.setInterval(this.handleClockUpdate, 1000));\n  }\n\n  getRandomName = (): void => {\n    const value = Date.now().toString().slice(-4);\n\n    this.setState({ clockName: `Clock-${value}` });\n  };\n\n  handleClockUpdate = (): void => {\n    const time = new Date().toUTCString().slice(-12, -4);\n\n    this.setState(\n      { currentTime: time },\n    );\n  };\n\n  handleHasClockOff = (rightClick: Event): void => {\n    rightClick.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleHasClockOn = ():void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      currentTime,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n        && <Clock name={clockName} time={currentTime} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}